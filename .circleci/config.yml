version: 2.1

orbs:
  nypr-deploy: nypr/nypr-deploy@0.0.102

filter_all: &filter_all
  filters:
    branches:
      only: /.*/
    tags:
      only: /.*/

filter_demo: &filter_demo
  filters:
    branches:
      only: main
    tags:
      only: demo

filter_prod: &filter_prod
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^v[0-9]+\.[0-9]+\.[0-9]+/

workflows:
  test-and-deploy:
    jobs:
      - build:
          <<: *filter_all
      - test_nginx:
          <<: *filter_all
      - test_eslint:
          <<: *filter_all
          requires:
            - build
      - test_cypress:
          <<: *filter_all
          requires:
            - build
      - nypr-deploy/build_and_deploy:
          name: Deploy (demo)
          context: AWS Deploy
          <<: *filter_demo
          env: demo
          repo: gothamist-vue3
          service: gothamist-vue3
          cluster: gothamist-vue3
          cpu: 256
          memory: 512
          use_firelens: true
          requires:
            - test_eslint
            - test_nginx
            - test_cypress
      - nypr-deploy/build_and_deploy:
          name: Deploy (prod)
          context: AWS Deploy
          env: prod
          repo: gothamist-vue3
          service: gothamist-vue3
          cluster: gothamist-vue3
          cpu: 1024
          memory: 2048
          use_firelens: true
          <<: *filter_prod
          requires:
            - test_eslint
            - test_nginx
            - test_cypress
      - purge:
          name: Purge (demo)
          context: AWS Deploy
          <<: *filter_demo
          purge_files: '{"files": ["https://demo.gothamist.com"]}'
          requires:
            - Deploy (demo)
      - purge:
          name: Purge (prod)
          context: AWS Deploy
          <<: *filter_prod
          purge_files: '{"purge_everything": true}'
          requires:
            - Deploy (prod)

jobs:
  # Note (allie): This is its own job because I don't
  # want to run the tests in an environment that has the
  # built project.
  build:
    executor: default
    steps:
      - checkout
      - setup_npmrc
      - run:
          name: install dependencies
          command: |
            npm ci
      - save_cache:
          key: v3-deps-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - /root/.cache/Cypress
      - run:
          name: Assert that it builds
          command: |
            npm run build

  test_eslint:
    executor: default
    steps:
      - checkout
      - restore_cache:
          key: v3-deps-{{ checksum "package-lock.json" }}
      # run linter
      - run:
          name: Run eslint
          command: |
            npm run lint

  test_cypress:
    executor: default
    steps:
      - checkout
      - restore_cache:
          key: v3-deps-{{ checksum "package-lock.json" }}
      # run test suite
      - run:
          name: Run e2e tests
          command: |
            npx nuxi prepare
            npm run test-cypress-ci

  test_nginx:
    docker:
      - image: node:18.18.2-slim
    parameters:
      env:
        type: enum
        default: demo
        enum: [demo, prod]
      tag:
        type: string
        default: ''
    steps:
      - checkout
      - run:
          name: Test NGINX
          environment:
            ENV: <<parameters.env>>
          command: |
            apt-get update && \
            apt-get install -y nginx-extras
            mkdir -p /app/nginx
            cp ./nginx/*.conf /etc/nginx/
            nginx -t

  purge:
    docker:
      - image: circleci/python:3.8
    parameters:
      purge_files:
        type: string
        default: ''
    steps:
      - run:
          name: Purge Cloudflare
          environment:
            PURGE: <<parameters.purge_files>>
          command: |
            curl --request POST \
              --url https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/purge_cache \
              --header "Content-Type: application/json" \
              --header "Authorization: Bearer $CLOUDFLARE_PURGE_KEY" \
              --data "$PURGE"

commands:
  setup_npmrc:
    steps:
      - run:
          name: Setup .npmrc
          command: |
            echo "@nypublicradio:registry=https://npm.pkg.github.com" > .npmrc
            echo "//npm.pkg.github.com/:_authToken=$PAT" >> .npmrc

executors:
  default:
    docker:
      - image: cypress/browsers:node-18.16.1-chrome-114.0.5735.133-1-ff-114.0.2-edge-114.0.1823.51-1
    environment:
      JOBS: 2
